# Finding styles with regexp

Lang sk_SK.utf8
CO: findadv-re-04.ctrl
CN: Part 1
CP: Init key
TestBegin test.lyx -dbg key,find > findadv-re-04.loga.txt 2>&1
CP: Key (queried) [action=buffer-begin][Ctrl+Home]
KK: The quick Brown \CeFox JUmps\Ce over the lazy Dog\[Return]
KK: \C\[Home]
KK: \Cs
KK: \CF
# Uncheck ignore format (depends on IT language)
KK: \At\Ai\Ah
KK: \Ce
CN: Case insensitive, format not ignored .*
KK: \Axregexp-mode\[Return].*\[Return]
Cr: ^.*Putting 
CP: Putting selection at .*idx: 0 par: 0 pos: 16\n with len: 9
TestEnd

CO: >> findadv-re-04.ctrl
CN: Part 2
CP: Init key
TestBegin test.lyx -dbg key,find >> findadv-re-04.loga.txt 2>&1
CN: Case insensitive, format not ignored [a-z]*
KK: \CF
# Uncheck ignore format (depends on IT language)
KK: \At\Ai\Ah
KK: \Ce
KK: \Axregexp-mode\[Return][a-z]*\[Return]\[Return]\[Return]
Cr: ^.*Putting 
CP: Putting selection at .*idx: 0 par: 0 pos: 16\n with len: 3
Cr: ^.*Putting 
CP: Putting selection at .*idx: 0 par: 0 pos: 20\n with len: 5
TestEnd

CO: >> findadv-re-04.ctrl
CN: Part 3
CP: Init key
TestBegin test.lyx -dbg key,find >> findadv-re-04.loga.txt 2>&1

CN: Case sensitive, format not ignored [a-z]*
KK: \CF
KK: \At\Ai\Ah
KK: \Ce
KK: \Ao\[Tab]\Axregexp-mode\[Return][a-z]*\[Return]\[Return]\[Return]\[Return]\[Return]\[Return]\[Return]
Cr: ^.*Putting
CP: Putting selection at .*idx: 0 par: 0 pos: 17\n with len: 2
Cr: ^.*Putting
Cr: ^.*Init key
CP: Putting selection at .*idx: 0 par: 0 pos: 22\n with len: 3
TestEnd

CO: >> findadv-re-04.ctrl
CN: Part 4
CP: Init key
TestBegin test.lyx -dbg key,find >> findadv-re-04.loga.txt 2>&1

CN: Case sensitive, format not ignored [A-Z]*
KK: \CF
KK: \At\Ai\Ah
KK: \Ce
KK: \Ao\[Tab]\Axregexp-mode\[Return][A-Z]*\[Return]\[Return]\[Return]\[Return]\[Return]
Cr: ^.*Putting
CP: Putting selection at .*idx: 0 par: 0 pos: 16\n with len: 1
Cr: ^.*Putting
CP: Putting selection at .*idx: 0 par: 0 pos: 20\n with len: 2
TestEnd
Lang C
Assert searchPatterns.pl log=findadv-re-04.loga.txt patterns=findadv-re-04.ctrl
